{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpectApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpectApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SAVU,SAACC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAKlB,SACG,uBACCO,KAAK,OACLC,MAAOT,EACPU,SAlBiB,SAACP,GACtBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,QCLlBK,EAAc,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEpC,OADAN,QAAQC,IAAIG,EAAGC,EAAMC,GAEjB,qBAAKC,UAAU,6CAAf,SACI,qBAAKC,IAAKF,EAAKG,IAAKJ,O,uBCNnBK,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACXN,EADW,iDACqCO,UAAWF,GADhD,+DAEEG,MAAMR,GAFR,cAEXS,EAFW,gBAGIA,EAAKC,OAHT,uBAGVC,EAHU,EAGVA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QARzB,kBAYVY,GAZU,4CAAD,sDCKPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAMrB,ECRwB,SAACA,GACzB,MAA0BvB,mBACtB,CACI6B,KAAK,GACLO,SAAS,IAHjB,mBAAOC,EAAP,KAAcC,EAAd,KAyBA,OAnBAC,qBAAU,WACNjB,EAAQC,GACPiB,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLT,KAAKY,EACLL,SAAQ,MAEd,UAGP,CAACb,IAOGc,EDlBwBM,CAAapB,GAAhCU,EAAZ,EAAOJ,KAAaO,EAApB,EAAoBA,QAEpB,OACI,qCACA,6BAAKb,IAEHa,GAAW,2CACb,qBAAKjB,UAAU,YAAf,SAIYc,EAAOF,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIhB,aEnBjC4B,EAAe,WACxB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ8C,EAAWd,KAAI,SAAAR,GAAQ,OACvB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCfzBuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.9438f959.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange =(e) =>{\n        console.log(e.target.value)\n        setInputValue(e.target.value)\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n        //console.log('Submit Hecho')\n        if(inputValue.trim().length>2){\n            setCategories(cats =>[inputValue,...cats])\n            setInputValue('');\n        }\n        \n    }\n    return (\n        <form onSubmit={handleSubmit}>\n           <input \n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}\n           />\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    console.log(id,title,url)\n    return (\n        <div className=\"card animate__animated animate__fadeInDown\">\n            <img src={url} alt={title} />\n        </div>\n    )\n}\n","export const getGifs=async(category)=>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category)}&limit=10&api_key=reHslTlPva37lligkBr2lvYFd134HuKN`\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map(img => {\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs\n}\n","import React, {useState,useEffect} from 'react'\n//import { getGifs } from '../helpers/getGifs'\nimport { GifGridItem } from './GifGridItem'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n\nexport const GifGrid = ({category}) => {\n    //const [count, setCount] = useState(0)\n   // const [images, setImages] = useState([])\n    // useEffect(()=>{\n    //     getGifs(category).then(setImages)},[category])\n    \n    const {data:images, loading} = useFetchGifs(category);\n    \n    return (\n        <>\n        <h3>{category}</h3>\n        \n        { loading && <p>cargando..</p> }\n        <div className=\"card-grid\">\n            \n\n            {\n                    images.map(img=>(\n                        <GifGridItem key={img.id} {...img}/>\n                    ))\n            }\n\n            {/* <h3>{count}</h3> */}\n            {/* <button onClick={()=> setCount(count +1)}></button> */}\n        </div>\n        </>\n    )\n}\n","import {useState,useEffect} from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState(\n        {\n            data:[],\n            loading: true\n        }\n    )\n    useEffect(() => {\n        getGifs(category)\n        .then(imgs =>{\n            //console.log(imgs)\n            setTimeout(()=>{\n                setState({\n                    data:imgs,\n                    loading:false\n                })\n            },3000)\n        })\n        \n    }, [category])\n    // setTimeout(()=>{\n    //     setState({\n    //         data:[1,2,3,4,5,6,7],\n    //         loading:false\n    //     })\n    // },300)\n    return state;\n}\n","import React,{useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpectApp = () => {\n    const [categories, setCategories] = useState(['One Punch']);\n    // const handleAdd = () =>{\n\n    //     //setCategories([...categories,'HunterXHunter']);\n    //     setCategories(cats =>[...categories,'HunterXHunter']);\n    // }\n    return (\n        <>\n            <h2>GifExpectApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr />\n            <ol>\n                {\n                    categories.map(category => (\n                    <GifGrid \n                    key={category} \n                    category={category} \n                    />\n                    )\n                    )\n                }\n            </ol>\n\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpectApp } from './GifExpectApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpectApp/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}